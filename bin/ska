#!/usr/bin/env python3

import sys
import signal
import os
import subprocess

def ssh_add(key):
    print(key)
    subprocess.call(["ssh-add " + key], shell=True)

def signal_handler(signal, frame):
    print("Aborted!")
    sys.exit(0)

signal.signal(signal.SIGINT, signal_handler)

ssh_folder = os.path.expanduser("~/.ssh")

keys_in_sshagent = subprocess.getoutput("ssh-add -l").split("\n")

priv_key_files=[]

for f in os.listdir(ssh_folder):
    with open(ssh_folder+"/"+f) as file:
        for line in file:
            if "PRIVATE KEY" in line:
                priv_key_files.append(f)
                break

not_added_keys=[]
for priv_key in priv_key_files:
    is_present = False
    for added_already in keys_in_sshagent:
        if "/"+priv_key in added_already:
            is_present = True
            break
    if not is_present:
        not_added_keys.append(priv_key)

if len(not_added_keys) == 1:
    ssh_add(ssh_folder + "/" + not_added_keys[0])
    sys.exit(0)

not_added_keys.sort()

if not not_added_keys:
    print("No key left to add")
    sys.exit(0)

for n, k in enumerate(not_added_keys):
    print(" {}) {}".format(n+1, k))

while True:
    try:
        num=int(input("Select which to add: "))
        if num<1 or num>len(not_added_keys):
            raise IndexError
        print("use: " + not_added_keys[num-1])
        ssh_add(ssh_folder + "/" + not_added_keys[num-1])
        break

    except (ValueError, IndexError):
        print("Not a valid number, try again")
        continue



